@using WebUI.Components.Layout

<div class="   flex flex-col    justify-between min-h-full p-2 ">



    <div class="  ">
        <div class=" flex  flex-col">
            <AuthorizeView>
                <div class=" flex items-center justify-center ">
                    <a href="app/home">
                        <img src="logo-dark.png" alt="logo" class="object-contain h-8">
                    </a>

                </div>

                <div class="  p-4  ">
                    <a href="app/home" class="flex items-center   font-semibold text-primary gap-2 ">
                        <svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 32 32">
                            <path fill="currentColor"
                                d="M16.612 2.214a1.01 1.01 0 0 0-1.242 0L1 13.419l1.243 1.572L4 13.621V26a2.004 2.004 0 0 0 2 2h20a2.004 2.004 0 0 0 2-2V13.63L29.757 15L31 13.428ZM18 26h-4v-8h4Zm2 0v-8a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v8H6V12.062l10-7.79l10 7.8V26Z" />
                        </svg>

                        <span class=" ">Home</span>
                    </a>
                </div>


            </AuthorizeView>
        </div>

        <!-- Sidebar Links for Admin -->
        <AuthorizeView Policy="AdministrationPolicy">
            <div class=" ">
                @if (CanManageUser)
                {
                    <div class="collapse bg-base-100  ">
                        <input type="checkbox" />
                        <div class="collapse-title  font-semibold text-primary flex items-center gap-2 ">
                            <svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24">
                                <g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"
                                    stroke-width="1.5" color="currentColor">
                                    <path
                                        d="M20 22v-5c0-1.886 0-2.828-.586-3.414S17.886 13 16 13l-4 9l-4-9c-1.886 0-2.828 0-3.414.586S4 15.114 4 17v5" />
                                    <path
                                        d="m12 15l-.5 4l.5 1.5l.5-1.5zm0 0l-1-2h2zm3.5-8.5v-1a3.5 3.5 0 1 0-7 0v1a3.5 3.5 0 1 0 7 0" />
                                </g>
                            </svg>
                            <span class=" ">User Management</span>
                        </div>
                        <div class="collapse-content bg-base-100">
                            <ul class="menu">
                                <li><a href="administration/account/create-user">Add User</a></li>
                                <li><a href="administration/account/users/manage">Manage User</a></li>
                                <li><a href="administration/account/user-management-update">Update User</a></li>
                            </ul>
                        </div>
                    </div>
                }

                <div class="collapse  bg-base-100 mt-2 ">
                    <input type="checkbox" class="peer" />
                    <div class="collapse-title  font-semibold text-primary flex items-center gap-2">
                        <svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 48 48">
                            <g fill="none" stroke="currentColor" stroke-linejoin="round" stroke-width="4">
                                <path d="M44 14L24 4L4 14v20l20 10l20-10z" />
                                <path stroke-linecap="round" d="m4 14l20 10m0 20V24m20-10L24 24M34 9L14 19" />
                            </g>
                        </svg>
                        <span class=" ">Product Management</span>
                    </div>
                    <div class="collapse-content bg-base-100">
                        <ul class="menu">
                            <li><a href="app/products/manage">Products</a></li>
                            <li><a href="app/products/category/manage">Categories</a></li>
                            <li><a href="app/products/location/manage">Locations</a></li>
                        </ul>
                    </div>
                </div>

                <!-- Admin Orders -->
                <li class="p-4 list-none">
                    <a href="app/administration/products/orders"
                        class="flex items-center   font-semibold text-primary gap-2">
                        <svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24">
                            <g fill="none" stroke="currentColor" stroke-width="2">
                                <rect width="14" height="17" x="5" y="4" rx="2" />
                                <path stroke-linecap="round" d="M9 9h6m-6 4h6m-6 4h4" />
                            </g>
                        </svg>
                        <span class=" ">Orders</span>
                    </a>
                </li>
            </div>
        </AuthorizeView>

        <!-- User Orders -->
        <AuthorizeView Policy="@Policy.UserPolicy">
            <li class="mt-2 list-none">
                <a href="app/products/orders" class="flex items-center  font-semibold text-primary gap-2">
                    <i class="fa fa-shopping-cart"></i>
                    <span>My Orders</span>
                </a>
            </li>
        </AuthorizeView>
        <AuthorizeView>
            <div class="   p-4  ">
                <div class="text-sm text-gray-500">
                    <p>System Info</p>
                    <ul>
                        <li><a>Version 1.0.0</a></li>
                    </ul>
                </div>
            </div>
        </AuthorizeView>
    </div>

    <!-- Sidebar header with Home Link -->


    <!-- System Info -->

</div>

@code
{
    [CascadingParameter] public Task<AuthenticationState>? myState { get; set; }
    bool CanManageUser = false;
    private bool isOpen = false;
    private void HandleToggle()
    {
        isOpen = !isOpen;
    }

    protected override async Task OnInitializedAsync()
    {
        CanManageUser = customAuthorizationService.CustomClaimChecker((await myState!).User, DefaultClaims.ManageUser);
    }
}

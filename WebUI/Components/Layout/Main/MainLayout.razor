@using WebUI.Components.Layout.Sidebar
@using WebUI.Components.Layout.NavigationBar
@using System.Security.Claims
@using Blazored.Toast.Configuration
@inject UserActiveOrderCountState userState

@inherits LayoutComponentBase

<div class="flex h-screen bg-base-200 " >
  

    <!-- Drawer for mobile and tablet views -->
    <div class="drawer lg:drawer-open">
        <!-- Drawer toggle input -->
        <input id="my-drawer" type="checkbox" class="drawer-toggle" />
        
        <!-- Drawer content -->
        <div class="drawer-content flex flex-col">
            <div class="flex items-center justify-between bg-base-200 p-4">
                <!-- Drawer Toggle Button -->
                <label for="my-drawer" class="drawer-button lg:hidden">
                  <svg xmlns="http://www.w3.org/2000/svg" width="2em" height="2em" viewBox="0 0 15 15"><path fill="currentColor" fill-rule="evenodd" d="M1.5 3a.5.5 0 0 0 0 1h12a.5.5 0 0 0 0-1zM1 7.5a.5.5 0 0 1 .5-.5h12a.5.5 0 0 1 0 1h-12a.5.5 0 0 1-.5-.5m0 4a.5.5 0 0 1 .5-.5h12a.5.5 0 0 1 0 1h-12a.5.5 0 0 1-.5-.5" clip-rule="evenodd"/></svg>
                </label>
                
                <!-- User Dropdown on Large Screens -->
                <div class=" lg:flex lg:ml-auto items-center space-x-4">
                    <li class="dropdown dropdown-hover">
                        <a tabindex="0" class="btn btn-ghost flex items-center">
                            <svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 20 20">
                                <path fill="currentColor" d="M10 9.25c-2.27 0-2.73-3.44-2.73-3.44C7 4.02 7.82 2 9.97 2c2.16 0 2.98 2.02 2.71 3.81c0 0-.41 3.44-2.68 3.44m0 2.57L12.72 10c2.39 0 4.52 2.33 4.52 4.53v2.49s-3.65 1.13-7.24 1.13c-3.65 0-7.24-1.13-7.24-1.13v-2.49c0-2.25 1.94-4.48 4.47-4.48z" />
                            </svg>
                            <span class="ml-2">@Name</span>
                            <svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24">
                                <path fill="currentColor" d="m7 10l5 5l5-5z" />
                            </svg>
                        </a>
                        <ul tabindex="0" class="dropdown-content menu shadow  rounded-box w-32">
                            <li>
                                <form action="Account/logout" method="post">
                                    <AntiforgeryToken />
                                    <button type="submit" class="btn btn-error btn-block">
                                        Logout
                                    </button>
                                </form>
                            </li>
                        </ul>
                    </li>
                </div>
            </div>
            <main class="flex-1">
                @Body
            </main>
        </div>
        
        <!-- Sidebar content -->
        <div class="drawer-side border-r border-base-300 h-full ">
            <label for="my-drawer" class="drawer-overlay"></label>
            <div class="  w-80 bg-base-200 h-full">
                <Content />
            </div>
        </div>
    </div>
</div>

@code
{
    [CascadingParameter] public Task<AuthenticationState>? UserState { get; set; }
    string? Name;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Name = (await UserState!).User.Claims.FirstOrDefault(c => c.Type == "Name")?.Value;
        }
        catch { }
    }
}
